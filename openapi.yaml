openapi: 3.0.1
info:
  title: Jess Backend
  description: API For different actions for Jessica.
  version: "v1"
servers:
  - url: PLUGIN_HOSTNAME
paths:
  /finances/alpaca/sell/all:
    post:
      operationId: sellAll
      summary: Sell all shares of a specific ticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticker:
                  type: string
      responses:
        '200':
          description: Successfully submitted sell order
        '400':
          description: Ticker parameter is missing
        '500':
          description: Authentication error

  /finances/alpaca/sell/stoplimit:
    post:
      operationId: sellStopLimit
      summary: Submit a stop limit sell order for a specific ticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticker:
                  type: string
                  description: The ticker symbol for the stock
                stop_price:
                  type: number
                  format: float
                  description: The stop price to trigger the limit order
                limit_price:
                  type: number
                  format: float
                  description: The limit price at which the stock should be sold
      responses:
        '200':
          description: Successfully submitted stop limit sell order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Submitted stop limit sell order for AAPL with stop price 150.00 and limit price 148.00
        '400':
          description: Missing or invalid parameters
        '500':
          description: Authentication error or server error

  /finances/alpaca/portfolio:
    get:
      operationId: getOpenPositions
      summary: Retrieve open positions in the user's Alpaca portfolio
      responses:
        '200':
          description: Successfully retrieved open positions
        '500':
          description: Authentication error

  /finances/alpaca/buy/conditional:
    post:
      operationId: buyConditional
      summary: Submit a conditional buy limit order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticker:
                  type: string
                limit_price:
                  type: number
                  format: float
                notional:
                  type: number
                  format: float
      responses:
        '200':
          description: Successfully submitted limit buy order
        '400':
          description: Ticker, limit price, and notional amount are required
        '500':
          description: Authentication error

  /finances/alpaca/orders:
    get:
      operationId: getOpenOrders
      summary: Retrieve list of open orders
      responses:
        '200':
          description: Successfully retrieved list of open orders
        '500':
          description: Authentication error

  /financial/fmp/earnings/ticker:
    get:
      operationId: getAllEarningsForTicker
      summary: Get all earnings for a specific ticker
      parameters:
        - name: ticker
          in: query
          required: true
          schema:
            type: string
          description: Ticker symbol for which all earnings are to be retrieved
      responses:
        '200':
          description: Successfully retrieved all earnings for the specified ticker
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: Ticker parameter is missing

  /financial/fmp/earnings/nextweek:
    get:
      operationId: getEarningsNextWeek
      summary: Get earnings for the next week
      responses:
        '200':
          description: Successfully retrieved earnings for the next week
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /finances/alpaca/portfolio:
    get:
      operationId: getOpenPositions
      summary: Retrieve the open positions in a user's Alpaca portfolio
      responses:
        '200':
          description: Successfully retrieved open positions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '500':
          description: Error occurred, possibly due to authentication issues

  /finances/alpaca/market/open:
    get:
      operationId: isMarketOpenNow
      summary: Check if the market is open now for a user's Alpaca account
      responses:
        '200':
          description: Successfully retrieved market open status
          content:
            application/json:
              schema:
                type: boolean
                example: true
        '500':
          description: Error occurred, possibly due to authentication issues

  /financial/fmp/news:
    get:
      operationId: getFinancialNews
      summary: Get all the latest important news that have happened recently (and can impact markets).
      responses:
        '200':
          description: Successfully retrieved financial news
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /financial/fmp/news/ticker:
    get:
      operationId: getFinancialNewsByTicker
      summary: Get all the latest important news related to a specific ticker.
      parameters:
        - name: ticker
          in: query
          required: true
          schema:
            type: string
          description: Ticker symbol of the stock, for which news needs to be retrieved.
      responses:
        '200':
          description: Successfully retrieved news for the specified ticker
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: Ticker parameter is missing

  /financial/fmp/events/nextweek:
    get:
      operationId: getEventsNextWeek
      summary: Get all the important economic events for the next 7 days that might impact the market.
      responses:
        '200':
          description: Successfully retrieved economic events for the next week
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /financial/fmp/events/nextday:
    get:
      operationId: getEventsNextDay
      summary: Get all the important economic events for the next day that might impact the market.
      responses:
        '200':
          description: Successfully retrieved economic events for the next day
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /finances/alpaca/performance:
    get:
      operationId: getPerformance
      summary: Get overall account performance from all the investments
      responses:
        '200':
          description: Successfully retrieved the account performance
          content:
            text/plain:
              schema:
                type: string
                example: "Net Investment: $1000.00\nCurrent Portfolio Value: $1500.00\nPortfolio Performance: 50.00%"
        '500':
          description: Error occurred, possibly due to authentication issues
  /current/datetime:
    get:
      operationId: getCurrentDateTime
      summary: Get the current date and time
      responses:
        '200':
          description: Current date and time returned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  datetime:
                    type: string
                    example: '2023-12-04T15:30:00Z'
                    description: The current date and time in ISO 8601 format
        '500':
          description: Internal server error
  /memories/:
    post:
      operationId: storeMemory
      summary: Store a new memory/fact about a user so you can retrive it later
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                memory:
                  type: string
                  description: The memory or fact to store about the user
      responses:
        '200':
          description: Memory stored successfully
        '400':
          description: Bad request
    get:
      operationId: queryMemory
      summary: Ask a question about a user and relevant memories/facts will be retrived
      parameters:
        - name: question
          in: query
          required: true
          schema:
            type: string
            description: Query/question to use to retrieve relevant memory/facts about user
        - name: count
          in: query
          required: false
          schema:
            type: number
            description: Amount of facts/memories to return (sorted by relevance), default is 5
      responses:
        '200':
          description: Successfully retrieved the relevant memory
          content:
            application/json:
              schema:
                type: object
                properties:
                  memories:
                    type: array
                    description: A list of relevant memories or facts in response to the question
                    items:
                      type: string
        '400':
          description: Bad request
        '500':
          description: You need to re-authenticate
